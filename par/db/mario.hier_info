|mario
clk => clk.IN3
rst_n => rst_n.IN2
dig[0] <= disp:u_disp.dig
dig[1] <= disp:u_disp.dig
dig[2] <= disp:u_disp.dig
dig[3] <= disp:u_disp.dig
seg[0] <= disp:u_disp.seg
seg[1] <= disp:u_disp.seg
seg[2] <= disp:u_disp.seg
seg[3] <= disp:u_disp.seg
seg[4] <= disp:u_disp.seg
seg[5] <= disp:u_disp.seg
seg[6] <= disp:u_disp.seg
seg[7] <= disp:u_disp.seg
key[0] => key[0].IN1
key[1] => key[1].IN1
key[2] => key[2].IN1
key[3] => key[3].IN1
vga_hs <= vga_driver:u_vga_driver.vga_hs
vga_vs <= vga_driver:u_vga_driver.vga_vs
vga_rgb[0] <= vga_driver:u_vga_driver.vga_rgb
vga_rgb[1] <= vga_driver:u_vga_driver.vga_rgb
vga_rgb[2] <= vga_driver:u_vga_driver.vga_rgb


|mario|disp:u_disp
clk => clk.IN1
rst_n => rst_n.IN1
state_no[0] => Decoder0.IN5
state_no[0] => Decoder1.IN5
state_no[0] => Decoder2.IN5
state_no[0] => Decoder3.IN5
state_no[1] => Decoder0.IN4
state_no[1] => Decoder1.IN4
state_no[1] => Decoder2.IN4
state_no[1] => Decoder3.IN4
state_no[2] => Decoder0.IN3
state_no[2] => Decoder1.IN3
state_no[2] => Decoder2.IN3
state_no[2] => Decoder3.IN3
state_no[3] => Decoder0.IN2
state_no[3] => Decoder1.IN2
state_no[3] => Decoder2.IN2
state_no[3] => Decoder3.IN2
state_no[4] => Decoder0.IN1
state_no[4] => Decoder1.IN1
state_no[4] => Decoder2.IN1
state_no[4] => Decoder3.IN1
state_no[5] => Decoder0.IN0
state_no[5] => Decoder1.IN0
state_no[5] => Decoder2.IN0
state_no[5] => Decoder3.IN0
dig[0] <= led:u_led.dig
dig[1] <= led:u_led.dig
dig[2] <= led:u_led.dig
dig[3] <= led:u_led.dig
seg[0] <= led:u_led.seg
seg[1] <= led:u_led.seg
seg[2] <= led:u_led.seg
seg[3] <= led:u_led.seg
seg[4] <= led:u_led.seg
seg[5] <= led:u_led.seg
seg[6] <= led:u_led.seg
seg[7] <= led:u_led.seg


|mario|disp:u_disp|led:u_led
clk => seg[0]~reg0.CLK
clk => seg[1]~reg0.CLK
clk => seg[2]~reg0.CLK
clk => seg[3]~reg0.CLK
clk => seg[4]~reg0.CLK
clk => seg[5]~reg0.CLK
clk => seg[6]~reg0.CLK
clk => seg[7]~reg0.CLK
clk => dig[0]~reg0.CLK
clk => dig[1]~reg0.CLK
clk => dig[2]~reg0.CLK
clk => dig[3]~reg0.CLK
clk => fresh_cnt[0].CLK
clk => fresh_cnt[1].CLK
clk => fresh_cnt[2].CLK
clk => fresh_cnt[3].CLK
clk => fresh_cnt[4].CLK
clk => fresh_cnt[5].CLK
clk => fresh_cnt[6].CLK
clk => fresh_cnt[7].CLK
clk => fresh_cnt[8].CLK
clk => fresh_cnt[9].CLK
clk => fresh_cnt[10].CLK
clk => fresh_cnt[11].CLK
clk => fresh_cnt[12].CLK
clk => fresh_cnt[13].CLK
clk => fresh_cnt[14].CLK
clk => fresh_cnt[15].CLK
clk => fresh_cnt[16].CLK
clk => fresh_cnt[17].CLK
clk => fresh_cnt[18].CLK
clk => fresh_cnt[19].CLK
clk => fresh_cnt[20].CLK
clk => fresh_cnt[21].CLK
clk => fresh_cnt[22].CLK
clk => fresh_cnt[23].CLK
clk => fresh_cnt[24].CLK
clk => fresh_cnt[25].CLK
clk => fresh_cnt[26].CLK
clk => fresh_cnt[27].CLK
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => fresh_cnt.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => always1.IN1
num_0[0] => num2disp[0].DATAB
num_0[1] => num2disp[1].DATAB
num_0[2] => num2disp[2].DATAB
num_0[3] => num2disp[3].DATAB
num_0[4] => num2disp[4].DATAB
num_0[5] => num2disp[5].DATAB
num_1[0] => num2disp.DATAB
num_1[1] => num2disp.DATAB
num_1[2] => num2disp.DATAB
num_1[3] => num2disp.DATAB
num_1[4] => num2disp.DATAB
num_1[5] => num2disp.DATAB
num_2[0] => num2disp.DATAB
num_2[1] => num2disp.DATAB
num_2[2] => num2disp.DATAB
num_2[3] => num2disp.DATAB
num_2[4] => num2disp.DATAB
num_2[5] => num2disp.DATAB
num_3[0] => num2disp.DATAA
num_3[1] => num2disp.DATAA
num_3[2] => num2disp.DATAA
num_3[3] => num2disp.DATAA
num_3[4] => num2disp.DATAA
num_3[5] => num2disp.DATAA
dig[0] <= dig[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dig[1] <= dig[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dig[2] <= dig[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dig[3] <= dig[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= seg[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|mario|key:u_key
clk => key_out[0]~reg0.CLK
clk => key_out[1]~reg0.CLK
clk => key_out[2]~reg0.CLK
clk => key_out[3]~reg0.CLK
clk => delay_cnt[0].CLK
clk => delay_cnt[1].CLK
clk => delay_cnt[2].CLK
clk => delay_cnt[3].CLK
clk => delay_cnt[4].CLK
clk => delay_cnt[5].CLK
clk => delay_cnt[6].CLK
clk => delay_cnt[7].CLK
clk => delay_cnt[8].CLK
clk => delay_cnt[9].CLK
clk => delay_cnt[10].CLK
clk => delay_cnt[11].CLK
clk => delay_cnt[12].CLK
clk => delay_cnt[13].CLK
clk => delay_cnt[14].CLK
clk => delay_cnt[15].CLK
clk => delay_cnt[16].CLK
clk => delay_cnt[17].CLK
clk => delay_cnt[18].CLK
clk => delay_cnt[19].CLK
clk => delay_cnt[20].CLK
clk => delay_cnt[21].CLK
clk => delay_cnt[22].CLK
clk => delay_cnt[23].CLK
clk => delay_cnt[24].CLK
clk => delay_cnt[25].CLK
clk => delay_cnt[26].CLK
clk => delay_cnt[27].CLK
clk => delay_cnt[28].CLK
clk => delay_cnt[29].CLK
clk => key_changed.CLK
clk => key_in_d2[0].CLK
clk => key_in_d2[1].CLK
clk => key_in_d2[2].CLK
clk => key_in_d2[3].CLK
clk => key_in_d1[0].CLK
clk => key_in_d1[1].CLK
clk => key_in_d1[2].CLK
clk => key_in_d1[3].CLK
rst_n => key_changed.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => delay_cnt.OUTPUTSELECT
rst_n => key_in_d1.OUTPUTSELECT
rst_n => key_in_d1.OUTPUTSELECT
rst_n => key_in_d1.OUTPUTSELECT
rst_n => key_in_d1.OUTPUTSELECT
rst_n => key_in_d2.OUTPUTSELECT
rst_n => key_in_d2.OUTPUTSELECT
rst_n => key_in_d2.OUTPUTSELECT
rst_n => key_in_d2.OUTPUTSELECT
rst_n => key_out.OUTPUTSELECT
rst_n => key_out.OUTPUTSELECT
rst_n => key_out.OUTPUTSELECT
rst_n => key_out.OUTPUTSELECT
key_in[0] => key_in_d1.DATAA
key_in[0] => key_out.DATAB
key_in[1] => key_in_d1.DATAA
key_in[1] => key_out.DATAB
key_in[2] => key_in_d1.DATAA
key_in[2] => key_out.DATAB
key_in[3] => key_in_d1.DATAA
key_in[3] => key_out.DATAB
key_out[0] <= key_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_out[1] <= key_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_out[2] <= key_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_out[3] <= key_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|mario|pll:pll_inst
areset => areset.IN1
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|mario|pll:pll_inst|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|mario|pll:pll_inst|altpll:altpll_component|pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|mario|vga_driver:u_vga_driver
clk_vga => cnt_v[0].CLK
clk_vga => cnt_v[1].CLK
clk_vga => cnt_v[2].CLK
clk_vga => cnt_v[3].CLK
clk_vga => cnt_v[4].CLK
clk_vga => cnt_v[5].CLK
clk_vga => cnt_v[6].CLK
clk_vga => cnt_v[7].CLK
clk_vga => cnt_v[8].CLK
clk_vga => cnt_v[9].CLK
clk_vga => cnt_h[0].CLK
clk_vga => cnt_h[1].CLK
clk_vga => cnt_h[2].CLK
clk_vga => cnt_h[3].CLK
clk_vga => cnt_h[4].CLK
clk_vga => cnt_h[5].CLK
clk_vga => cnt_h[6].CLK
clk_vga => cnt_h[7].CLK
clk_vga => cnt_h[8].CLK
clk_vga => cnt_h[9].CLK
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_h.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rst_n => cnt_v.OUTPUTSELECT
rgb[0] => vga_rgb.DATAB
rgb[1] => vga_rgb.DATAB
rgb[2] => vga_rgb.DATAB
x[0] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[1] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[2] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[3] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[4] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[5] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[6] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[7] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[8] <= x.DB_MAX_OUTPUT_PORT_TYPE
x[9] <= x.DB_MAX_OUTPUT_PORT_TYPE
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[7] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[8] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[9] <= y.DB_MAX_OUTPUT_PORT_TYPE
vga_hs <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE
vga_vs <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE
vga_rgb[0] <= vga_rgb.DB_MAX_OUTPUT_PORT_TYPE
vga_rgb[1] <= vga_rgb.DB_MAX_OUTPUT_PORT_TYPE
vga_rgb[2] <= vga_rgb.DB_MAX_OUTPUT_PORT_TYPE


